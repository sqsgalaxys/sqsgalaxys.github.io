{"meta":{"title":"sqsgalaxys'Blog","subtitle":"不以物喜，不以己悲....","description":"Note","author":"sqsgalaxys","url":"http://yoursite.com"},"pages":[{"title":"about","date":"2015-11-30T18:53:52.000Z","updated":"2016-04-09T05:52:07.238Z","comments":true,"path":"about/index.html","permalink":"http://yoursite.com/about/index.html","excerpt":"","text":"About Me：Gackt camui ​"},{"title":"categorires","date":"2016-04-09T06:28:14.000Z","updated":"2016-04-09T06:29:38.716Z","comments":true,"path":"categorires/index.html","permalink":"http://yoursite.com/categorires/index.html","excerpt":"","text":""},{"title":"tags","date":"2016-04-09T06:28:29.000Z","updated":"2016-04-09T06:28:29.604Z","comments":true,"path":"tags/index.html","permalink":"http://yoursite.com/tags/index.html","excerpt":"","text":""}],"posts":[{"title":"Use Mybatis","slug":"Use-Mybatis","date":"2016-08-15T09:36:57.000Z","updated":"2016-08-15T11:21:41.413Z","comments":true,"path":"2016/08/15/Use-Mybatis/","link":"","permalink":"http://yoursite.com/2016/08/15/Use-Mybatis/","excerpt":"","text":"准备相关环境(jar)准备数据库,数据表添加数据库连接配置文件定义表对应的实体类","categories":[],"tags":[{"name":"Java","slug":"Java","permalink":"http://yoursite.com/tags/Java/"},{"name":"Use","slug":"Use","permalink":"http://yoursite.com/tags/Use/"},{"name":"MySQL","slug":"MySQL","permalink":"http://yoursite.com/tags/MySQL/"},{"name":"Mybatis","slug":"Mybatis","permalink":"http://yoursite.com/tags/Mybatis/"}]},{"title":"Use nmap","slug":"Use-nmap","date":"2016-08-15T01:11:55.000Z","updated":"2016-08-15T04:50:13.760Z","comments":true,"path":"2016/08/15/Use-nmap/","link":"","permalink":"http://yoursite.com/2016/08/15/Use-nmap/","excerpt":"","text":"NmapHost discoveryPS n - tcp syn pingPA n - tcp ack pingPU n - udp pingPM - nctmask reqPP - timestamp rcqPE - echo reqsL - list scanPO - protocol pingPN - no pingn - no DNSR - DNS resolution for all targets Port scanning techniquessSsTsUsAsWsYsZsOsN sF sX - null,fin,xmas 软件安装环境是win7、使用Zenmap， nmap6.49BETA2 扫描主机端口nmap -T4 -A -v 192.168.0.207 nmap -O –osscan-guess 192.168.0.207版本扫描（要在扫描端口后）nmap -sV 192.168.0.207Idle scan 使用另一个目标网张的主机发送数据包nmap -sL 192.168.0.23 192.168.0.207 其它选项说明：-A 操作系统检测-6 ipv6检测-T 时间模板，0-5-v 增加冗余-exclude 排除扫描地址-exclude file 排除文件里的ip地址 根据网段扫描获取主机列表// 普通扫描nmap -sn 192.168.1.*// ARP Ping 扫描:nmap -PR 192.168.1.* 针对主机扫描端口SYN半开扫描nmap -sS 192.168.1.1TCP扫描nmap -sT 192.168.1.1ftp弹跳扫描nmap -b username:password@server:port nmap -sV 192.168.1.88nmap -O 192.168.1.88 设置Nmap扫描的端口范围 其它常用选项-A 同时开启系统探测与服务版本探测(也称激烈模式).-v 开启冗余模式,这样能得到详细的信息报告.-e 使用指定网卡发送数据报文.-6 启用ipv6扫描 Nmap Target Selection// Scan a single IPnmap 192.168.1.1 // Scan a hostnmap www.testhostname.com // Scan a range of IPsnmap 192.168.1.1-20 // Scan a subnetnmap 192.168.1.0/24 // Scan targets from a text filenmap -iL list-of-ips.txt Nmap Port SelectionScan a single Port nmap -p 22 192.168.1.1Scan a range of ports nmap -p 1-100 192.168.1.1Scan 100 most common ports (Fast) nmap -F 192.168.1.1Scan all 65535 ports nmap -p- 192.168.1.1Nmap Port Scan types Scan using TCP connect nmap -sT 192.168.1.1Scan using TCP SYN scan (default) nmap -sS 192.168.1.1Scan UDP ports nmap -sU -p 123,161,162 192.168.1.1Scan selected ports - ignore discovery nmap -Pn -F 192.168.1.1Service and OS Detection Detect OS and Services nmap -A 192.168.1.1Standard service detection nmap -sV 192.168.1.1More aggressive Service Detection nmap -sV –version-intensity 5 192.168.1.1Lighter banner grabbing detection nmap -sV –version-intensity 0 192.168.1.1 Nmap Output Formats Save default output to file nmap -oN outputfile.txt 192.168.1.1Save results as XML nmap -oX outputfile.xml 192.168.1.1Save results in a format for grep nmap -oG outputfile.txt 192.168.1.1Save in all formats nmap -oA outputfile 192.168.1.1 Digging deeper with NSE Scripts Scan using default safe scripts nmap -sV -sC 192.168.1.1Get help for a script nmap –script-help=ssl-heartbleedScan using a specific NSE script nmap -sV -p 443 –script=ssl-heartbleed.nse 192.168.1.1Scan with a set of scripts nmap -sV –script=smb* 192.168.1.1 A scan to search for DDOS reflection UDP services Scan for UDP DDOS reflectors nmap –sU –A –PN –n –pU:19,53,123,161 –script=ntp-monlist,dns-recursion,snmp-sysdescr 192.168.1.0/24HTTP Service Information Gather page titles from HTTP services nmap –script=http-title 192.168.1.0/24Get HTTP headers of web services nmap –script=http-headers 192.168.1.0/24Find web apps from known paths nmap –script=http-enum 192.168.1.0/24Detect Heartbleed SSL Vulnerability Heartbleed Testing nmap -sV -p 443 –script=ssl-heartbleed 192.168.1.0/24IP Address information Find Information about IP address nmap –script=asn-query,whois,ip-geolocation-maxmind 192.168.1.0/24 参考: Nmap: the Network Mapper - Free Security Scanner Nmap - Wikipedia, the free encyclopedia Nmap - 维基百科，自由的百科全书 Nmap Cheat Sheet | HackerTarget.com Nmap 介绍与基本使用教程","categories":[],"tags":[{"name":"Use","slug":"Use","permalink":"http://yoursite.com/tags/Use/"},{"name":"Nmap","slug":"Nmap","permalink":"http://yoursite.com/tags/Nmap/"}]},{"title":"Learn English","slug":"Learn-English","date":"2016-08-14T04:55:48.000Z","updated":"2016-08-14T06:11:20.185Z","comments":true,"path":"2016/08/14/Learn-English/","link":"","permalink":"http://yoursite.com/2016/08/14/Learn-English/","excerpt":"","text":"This chapter will be about getting started with Git. We will begin by explaining some background on version control tools, then move on to how to get Git running on your system and finally how to get it set up to start working with. At the end of this chapter you should understand why Git is around, why you should use it and you should be all set up to do so. Version control is a system that records changes to a file or set of files over time so that you can recall specific versions later.","categories":[],"tags":[]},{"title":"Use AHK","slug":"Use-AHK","date":"2016-08-14T03:19:34.000Z","updated":"2016-08-14T03:28:15.156Z","comments":true,"path":"2016/08/14/Use-AHK/","link":"","permalink":"http://yoursite.com/2016/08/14/Use-AHK/","excerpt":"","text":"Use AHK## AutoHotkeyAutoHotkeyAutoHotkey Beginner TutorialLexikos/AutoHotkey_L: AutoHotkey - macro-creation and automation-oriented scripting utility for Windows.","categories":[],"tags":[]},{"title":"test","slug":"test","date":"2016-08-12T07:33:35.000Z","updated":"2016-08-12T08:24:43.481Z","comments":true,"path":"2016/08/12/test/","link":"","permalink":"http://yoursite.com/2016/08/12/test/","excerpt":"","text":"","categories":[],"tags":[]},{"title":"Use MySQL","slug":"Use-MySQL","date":"2016-08-12T07:13:47.000Z","updated":"2016-08-14T03:01:41.252Z","comments":true,"path":"2016/08/12/Use-MySQL/","link":"","permalink":"http://yoursite.com/2016/08/12/Use-MySQL/","excerpt":"","text":"Use MySQL 1. 使用命令行远程连接 MySQL 数据库库mysql -u username -p -h 96.44.132.138 -P 3306 -D dbname 参考: 命令行如何远程连接MySQL数据库 - lzpggg的专栏 - 博客频道 - CSDN.NET","categories":[],"tags":[{"name":"Use","slug":"Use","permalink":"http://yoursite.com/tags/Use/"},{"name":"MySQL","slug":"MySQL","permalink":"http://yoursite.com/tags/MySQL/"}]},{"title":"Hello World","slug":"hello-world","date":"2016-08-12T06:29:56.645Z","updated":"2016-08-08T08:35:00.523Z","comments":true,"path":"2016/08/12/hello-world/","link":"","permalink":"http://yoursite.com/2016/08/12/hello-world/","excerpt":"","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new \"My New Post\" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment","categories":[],"tags":[{"name":"Hexo","slug":"Hexo","permalink":"http://yoursite.com/tags/Hexo/"}]},{"title":"Use BIOS","slug":"Use-BIOS","date":"2016-08-11T04:50:17.000Z","updated":"2016-08-11T04:53:07.401Z","comments":true,"path":"2016/08/11/Use-BIOS/","link":"","permalink":"http://yoursite.com/2016/08/11/Use-BIOS/","excerpt":"","text":"BIOS - 维基百科，自由的百科全书","categories":[],"tags":[]},{"title":"Technology List","slug":"Technology-List","date":"2016-08-10T08:18:51.000Z","updated":"2016-08-10T08:23:57.165Z","comments":true,"path":"2016/08/10/Technology-List/","link":"","permalink":"http://yoursite.com/2016/08/10/Technology-List/","excerpt":"","text":"收一些技术Simple yet powerful library for building modern web interfaces. vue.js","categories":[],"tags":[{"name":"list","slug":"list","permalink":"http://yoursite.com/tags/list/"}]},{"title":"Java Reflect","slug":"Java-Reflect","date":"2016-08-09T04:38:42.000Z","updated":"2016-08-10T00:19:18.948Z","comments":true,"path":"2016/08/09/Java-Reflect/","link":"","permalink":"http://yoursite.com/2016/08/09/Java-Reflect/","excerpt":"","text":"Class.forName() 创建两个类:狗类、猫类继承父类动物接口,并实现其叫喊方法. 创建一个测试类,通过传入不同动物的名称输出其叫声.比如狗就是汪汪,猫就是喵喵. 定义动物借口12345package com.sqsgalaxys.testReflect;public interface Animal &#123; public void scream();&#125; 定义猫类12345678910package com.sqsgalaxys.testReflect;public class Cat implements Animal &#123; @Override public void scream() &#123; System.out.println(\"miao,miao\"); &#125;&#125; 定义狗类12345678910package com.sqsgalaxys.testReflect;public class Dog implements Animal &#123; @Override public void scream() &#123; System.out.println(\"wang,wang\"); &#125;&#125; 不使用反射的写法的测试类1234567891011121314151617181920212223242526272829package com.sqsgalaxys.testReflect;public class AnimalTest &#123; Animal animal = null; public void makeNoise(String flag) &#123; if (\"狗\".equals(flag)) &#123; animal = new Dog(); animal.scream(); &#125; else if (\"猫\".equals(flag)) &#123; animal = new Cat(); animal.scream(); &#125; else if (\"羊\".equals(flag)) &#123; // animal = new Sheep(); // animal.scream(); &#125; // else if ..... else &#123; System.out.println(\"没有发现任何动物\"); &#125; &#125; public static void main(String[] args) &#123; AnimalTest at = new AnimalTest(); // 输出猫的叫声 at.makeNoise(\"猫\"); &#125;&#125; 使用反射的写法的测试类12345678910111213141516171819202122package com.sqsgalaxys.testReflect;public class AnimalTestEx &#123; Animal animal = null; public void makeNoise(String animalName) &#123; try &#123; animal = (Animal) Class.forName(animalName).newInstance(); &#125; catch (InstantiationException | IllegalAccessException | ClassNotFoundException e) &#123; e.printStackTrace(); &#125; animal.scream(); &#125; public static void main(String[] args) &#123; AnimalTestEx at = new AnimalTestEx(); at.makeNoise(\"com.sqsgalaxys.testReflect.Cat\"); &#125;&#125; Class.forName() newInstance() getDeclaredMethod()invoke() getDeclaredField() setAccessible()....待反射获取的类Student1234567891011121314151617181920212223package com.sqsgalaxys.testReflectEx;public class Student &#123; private int age; private String name; public int getAge() &#123; return age; &#125; public void setAge(int age) &#123; this.age = age; &#125; public String getName() &#123; return name; &#125; public void setName(String name) &#123; this.name = name; &#125; public static void hi(int age,String name)&#123; System.out.println(\"大家好，我叫\"+name+\"，今年\"+age+\"岁\"); &#125; &#125; 测试类Test123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778package com.sqsgalaxys.testReflectEx;import java.lang.reflect.Field;import java.lang.reflect.InvocationTargetException;import java.lang.reflect.Method;public class Test &#123; @SuppressWarnings(&#123; \"unchecked\", \"unused\" &#125;) public static void main(String[] args) throws IllegalAccessException, IllegalArgumentException, InvocationTargetException, InstantiationException, ClassNotFoundException, NoSuchMethodException, SecurityException, NoSuchFieldException &#123; // 反射使用的三个步骤: // 1. 得到要调用类的 class // 2. 得到要调用的类中的方法 // 3. 方法调用 (invoke) // JAVA反射的常规使用步骤 Class&lt;?&gt; cls = Class.forName(\"com.sqsgalaxys.testReflectEx.Student\"); Method m = cls.getDeclaredMethod(\"hi\", new Class[] &#123; int.class, String.class &#125;); m.invoke(cls.newInstance(), 21, \"test\"); // 方法调用中的参数类型 // 正确调用 // Method setMethod = cls.getDeclaredMethod(\"setAge\", Integer.class); // setMethod.invoke(cls.newInstance(), 15); // 不正确调用 // Method setMethod = cls.getDeclaredMethod(\"setAge\", int.class); // setMethod.invoke(cls.newInstance(), 15); // 异常信息 // Exception in thread \"main\" java.lang.NoSuchMethodException: // com.sqsgalaxys.testReflectEx.Student.setAge(int) // at java.lang.Class.getDeclaredMethod(Unknown Source) // at com.sqsgalaxys.testReflectEx.Test.main(Test.java:**) // 参数类型要一致 // static方法的反射调用 // static方法调用时，不必得到对象实例 // Method staticMethod = cls.getDeclaredMethod(\"hi\", int.class, // String.class); // staticMethod.invoke(cls, 20, \"test\"); // staticMethod.invoke(cls.newInstance(), 21, \"test\"); // private 的成员变量赋值 // 直接赋值 // Object student = cls.newInstance();// 得到一个实例 // Field field = cls.getDeclaredField(\"age\"); // field.set(student, 10); // System.out.println(field.get(student)); // 异常信息 // Exception in thread \"main\" java.lang.IllegalAccessException: Class // com.sqsgalaxys.testReflectEx.Test can not access a member of class // com.sqsgalaxys.testReflectEx.Student with modifiers \"private\" // at sun.reflect.Reflection.ensureMemberAccess(Unknown Source) // at java.lang.reflect.AccessibleObject.slowCheckMemberAccess(Unknown // Source) // at java.lang.reflect.AccessibleObject.checkAccess(Unknown Source) // at java.lang.reflect.Field.set(Unknown Source) // at com.sqsgalaxys.testReflectEx.Test.main(Test.java:47) // private 的成员变量赋值 // 解决方法1 setAccessible() // Object student = cls.newInstance(); // Field field = cls.getDeclaredField(\"age\"); // field.setAccessible(true);//设置允许访问 // field.set(student, 10); // System.out.println(field.get(student)); // private 的成员变量赋值 // 解决方法2 // Object student = cls.newInstance(); // Method setMethod = cls.getDeclaredMethod(\"setAge\", Integer.class); // setMethod.invoke(student, 15);// 调用set方法 // Method getMethod = cls.getDeclaredMethod(\"getAge\"); // System.out.println(getMethod.invoke(student)); &#125;&#125; 参考: 十八、Java从头开始- Java反射的使用 - ranji13 - ITeye技术网站 JAVA反射使用手记 - hbcui1984的专栏 - 博客频道 - CSDN.NET","categories":[],"tags":[{"name":"Java","slug":"Java","permalink":"http://yoursite.com/tags/Java/"}]},{"title":"Use Git","slug":"Use-Git","date":"2016-08-08T11:45:21.000Z","updated":"2016-08-10T00:22:04.924Z","comments":true,"path":"2016/08/08/Use-Git/","link":"","permalink":"http://yoursite.com/2016/08/08/Use-Git/","excerpt":"版本控制系统 Subversion CVS Perforce snapshotDelta Storage systems","text":"版本控制系统 Subversion CVS Perforce snapshotDelta Storage systems git 命令// 设置用户名git config --global user.name &quot;name name&quot;// 设置用户邮箱git config --global user.email &quot;test@test.test&quot;// 显示 git 的全局设置git config --list// 设置 别名git config --global alias.st status// 使 git 忽略空白的变化git config --global apply.whitespace nowarn// 使 git 输出时加上颜色git config --global color.ui true// 编辑 git 全局配置文件vi C:\\Users\\Administrator\\.gitconfig// 初始化一个 git 仓库git init// 从远程仓库下载一个仓库,并放置到 test 文件夹git clone https://****@github.com/****/****.git test// 检查 git 仓库的状态git status// 把 Untracked files(未被追踪的文件)添加到追踪列表git add filename// 添加所有 Untracked filesgit add .// 互动模式git add -i// 提交git commit// 无提交窗口的提交git commit -m &quot;message&quot;// 强制提交当前目录下的所有内容git commit -a// 强制提交当前目录下的所有内容,并直接添加提交信息git commit -am &quot;message&quot;// 显示变更记录git commit -v// 查看 commit 记录git log// 查看 commit 记录详细信息git log --stat// 查看 commit 记录更详细信息git log -p// 查看 对象git cat-file -p ******(个数?)// 查看仓库里未暂存内容和已提交内容的差异git diff// 查看暂存区(staging area)里的内容git ls-files --stage// 把文件从暂存区移除git rm-cached filename// 把修改撤销git checkout -- filename// 查看当前的提交(HEAD)所包含的 blob 对象git cat-file -p HEAD | head -n 1 | cut -b6-15 | xargs git cat-file -p// 查看之前的的提交(HEAD^)所包含的 blob 对象git cat-file -p HEAD^ | head -n 1 | cut -b6-15 | xargs git cat-file -p // 把一个存在的仓库推送到 githubgit remote add origin https://github.com/****/****.gitgit push -u origin master fatal: remote origin already exists. git remote rm origingit remote add origin git@github.com:sqsgalaxys/Test-git.git terminal - Github “fatal: remote origin already exists” - Stack Overflow // 编辑 git 忽略列表vi .gitignore git 目录结构// 旧版使用的文件夹,新版git一般不会出现branches\\ // 下面这个目录灰常重要,里面存储 git 的数据对象 提交(commits) 树对象(trees) 二进制对象(blobs) 标签对象(tags)objects\\ // 各个 refs 的历史信息logs\\ // 里面有一个 exclude 文件,指定本项目要忽略的文件info\\ // 默认的 “hooks” 脚本文件hooks\\ // 表示这你的每个分支指向哪个提交 (commit)refs\\ // 保存着上一次提交时的注释信息COMMIT_EDITMSG // 索引文件,git add 后把要添加的项暂存到这里index // 项目的配置信息config // 项目当前在哪个分支的信息HEAD // 项目的描述信息description 传输协议git://http://https:// ssh,ftp(s),rsync 等协议 目录工作目录 一个 git 项目中文件的状态 未被跟踪的文件(untracked file) 已被跟踪的文件(tracked file) a. 被修改但未被暂存的文件(changed but not updated或 modified) b. 已暂存可以被提交的文件(changes to be committed或 staged) c. 自上次提交以来,未被修改的文件(clean 或 unmodified)跟踪 tracked修改 modified暂存 staged提交 committed 参考: Git 教學(1) : Git 的基本使用 - 好麻煩部落格 Git历险记（一） Git历险记（二）——Git的安装和配置 Git 历险记（三）——创建一个自己的本地仓库 Git历险记（四）——索引与提交的幕后故事 Git历险记（五）——Git里的分支＆合并 进阶: git 配置 Git Book 中文版 - 定制Git git-config(1) Git-Smart-HTTP-Transport(git 对http(s)传输协议的优化) 使用 Git强制从远程仓库获取代码覆盖本地强制用本地代码覆盖远程仓库一些常用的操作revertUntracked filesvi C:\\Users\\Administrator\\.githubcredSHA 签名串值HEAD 当前提交HEAD^ 前一次提交","categories":[],"tags":[{"name":"Use","slug":"Use","permalink":"http://yoursite.com/tags/Use/"},{"name":"Git","slug":"Git","permalink":"http://yoursite.com/tags/Git/"}]},{"title":"Use CMD","slug":"Use-CMD","date":"2016-08-08T09:48:56.000Z","updated":"2016-08-10T00:19:18.757Z","comments":true,"path":"2016/08/08/Use-CMD/","link":"","permalink":"http://yoursite.com/2016/08/08/Use-CMD/","excerpt":"使用 CMD使用 CMD 查看端口占用情况并结束占用的程序查看所有的端口占用情况netstat -an0查看指定端口的占用情况netstat -an0|findstr &quot;4000&quot;","text":"使用 CMD使用 CMD 查看端口占用情况并结束占用的程序查看所有的端口占用情况netstat -an0查看指定端口的占用情况netstat -an0|findstr &quot;4000&quot;查看PID对应的进程tasklist|findstr &quot;1234&quot;结束进程taskkill /f /t /im ***.exe 参考： windows 如何查看端口占用情况? - Windows - language - ITeye论坛 tasklist 命令 Tasklist","categories":[],"tags":[{"name":"Use","slug":"Use","permalink":"http://yoursite.com/tags/Use/"},{"name":"CMD","slug":"CMD","permalink":"http://yoursite.com/tags/CMD/"}]},{"title":"Use Chrome","slug":"Use-Chrome","date":"2016-08-08T09:02:17.000Z","updated":"2016-08-14T08:53:06.426Z","comments":true,"path":"2016/08/08/Use-Chrome/","link":"","permalink":"http://yoursite.com/2016/08/08/Use-Chrome/","excerpt":"","text":"copy 2 clipboard with ease - Chrome 网上应用店[title](url &quot;&quot;) LastPass: Free Password Manager - Chrome 网上应用店 Vim Tips - New Tab Replacement - Chrome 网上应用店 OneTab - Chrome 网上应用店 Vimium - Chrome 网上应用店Vimium Navigating the current page:? show the help dialog for a list of all available keys // 左右滑动 h scroll left l scroll right j scroll down k scroll up gg scroll to top of the page G scroll to bottom of the page // 向上下滑动半页 d scroll down half a page u scroll up half a page f open a link in the current tab F open a link in a new tab // 重新加载页面 r reload // 查看网页源码 gs view source // 进入插入模式 i enter insert mode -- all commands will be ignored until you hit Esc to exit // 拷贝当前标签的链接 yy copy the current url to the clipboard // 选择一个链接拷贝 yf copy a link url to the clipboard // frame gf cycle forward to the next frame gF focus the main/top frame Navigating to new pages:// 打开链接,书签,历史 o Open URL, bookmark, or history entry O Open URL, bookmark, history entry in a new tab // 打开书签 b Open bookmark B Open bookmark in a new tab Using find:/ enter find mode -- type your search query and hit enter to search, or Esc to cancel n cycle forward to the next find match N cycle backward to the previous find match For advanced usage, see regular expressions on the wiki. Navigating your history:H go back in history L go forward in history Manipulating tabs:J, gT go one tab left K, gt go one tab right g0 go to the first tab g$ go to the last tab ^ visit the previously-visited tab t create tab yt duplicate current tab x close current tab X restore closed tab (i.e. unwind the &apos;x&apos; command) T search through your open tabs &lt;a-p&gt; pin/unpin current tab Using marks:ma, mA set local mark &quot;a&quot; (global mark &quot;A&quot;) `a, `A jump to local mark &quot;a&quot; (global mark &quot;A&quot;) `` jump back to the position before the previous jump -- that is, before the previous gg, G, n, N, / or `a Additional advanced browsing commands:]], [[ Follow the link labeled &apos;next&apos; or &apos;&gt;&apos; (&apos;previous&apos; or &apos;&lt;&apos;) - helpful for browsing paginated sites &lt;a-f&gt; open multiple links in a new tab gi focus the first (or n-th) text input box on the page gu go up one level in the URL hierarchy gU go up to root of the URL hierarchy ge edit the current URL gE edit the current URL and open in a new tab zH scroll all the way left zL scroll all the way right v enter visual mode; use p/P to paste-and-go, use y to yank V enter visual line mode Vimium supports command repetition so, for example, hitting 5t will open 5 tabs in rapid succession. &lt;Esc&gt; (or&lt;c-[&gt;) will clear any partial commands in the queue and will also exit insert and find modes. There are some advanced commands which aren’t documented here; refer to the help dialog (type ?) for a fulllist. Custom Key Mappings 参考: philc/vimium: The hacker’s browser. Home · philc/vimium Wiki","categories":[],"tags":[{"name":"Use","slug":"Use","permalink":"http://yoursite.com/tags/Use/"},{"name":"Chrome","slug":"Chrome","permalink":"http://yoursite.com/tags/Chrome/"}]},{"title":"The day","slug":"The-Day","date":"2016-08-08T02:46:32.000Z","updated":"2016-08-15T01:12:59.774Z","comments":true,"path":"2016/08/08/The-Day/","link":"","permalink":"http://yoursite.com/2016/08/08/The-Day/","excerpt":"生日快乐～～","text":"生日快乐～～","categories":[],"tags":[]},{"title":"Use Linux","slug":"Use-Linux","date":"2016-08-08T01:49:17.000Z","updated":"2016-08-11T11:34:48.326Z","comments":true,"path":"2016/08/08/Use-Linux/","link":"","permalink":"http://yoursite.com/2016/08/08/Use-Linux/","excerpt":"Linux 启动设置: sudo vi /etc/inittab","text":"Linux 启动设置: sudo vi /etc/inittab 123456789101112# Default runlevel. The runlevels used are:# 0 - halt (Do NOT set initdefault to this)# 1 - Single user mode# 2 - Multiuser, without NFS (The same as 3, if you do not have networking)# 3 - Full multiuser mode# 4 - unused# 5 - X11# 6 - reboot (Do NOT set initdefault to this)##id:3:initdefault:#id:5:initdefault: Linux启动界面切换:图形界面-字符界面(转) - 草原和大树 - 博客园重启命令sudo reboot关机sudo poweroffcommand line - How do I shut down or reboot from a terminal? - Ask Ubuntu echo 命令echo -n od 命令 chkconfig 命令‘chkconfig –list’ 安装配置 ftp下载安装yum -y install vsftpdchkconfig --level 2345 vsftpd ontouch /var/log/vsftpd.logvi /etc/vsftpd/vsftpd.conf12`local_enable=YES``anonymous_enable=NO` adduser -d / -g ftp -s /sbin/nologin sqsgalaxyspasswd sqsgalaxys 配置 服务配置 用户配置启动 安装配置 ftp// 安装 vsftpdyum -y install vsftpd// 创建日志文件touch /var/log/vsftpd.log// 查看 vsftpd 服务启动情况 chkconfig --list 1234[root@localhost]~# chkconfig --list|grep ftpvsftpd 0:off 1:off 2:off 3:off 4:off 5:off 6:off[root@localhost]~# // 配置服务器开机自动启动 ftp 服务chkconfig --level 2345 vsftpd on// 启动 ftp 服务service vsftpd start// 查看 ftp 服务状态service vsftpd status// 重启 ftp 服务service vsftpd restart// 关闭 ftp 服务service vsftpd stop// 编辑 vsftpd 配置文件vi /etc/vsftpd/vsftpd.conf// 不允许匿名访问anonymous_enable=NO// 设定可以本地用户访问 ?虚拟宿主用户,虚拟用户local_enable=YES// 使用户不能离开主目录 配合/etc/vsftpd/chroot_list使用chroot_list_enable=YES// 设定 vsftpd 的服务日志保存路径xferlog_file=/var/log/vsftpd.log// 允许使用 ASCII 模式上传ascii_upload_enable=YES// 设定支持 ASCII 模式的上传和下载功能ascii_download_enable=YES// PAM 认证文件名 PAM 根据/etc/pam.d/vsftpd进行认证pam_service_name=vsftpd // 添加用户adduser -d / -g ftp -s /sbin/nologin sqsgalaxys// 设置密码passwd sqsgalaxys// 权限设置?chown -R sqsgalaxys:ftp/tmp/sqsgalaxys 㕜// 查看进程?ps -ef | grep ftpchkconfig –listchkconfig –list|grep ftpyum -y install vsftpdchkconfig –level 2345 vsftpd onchkconfig –list|grep ftpchkconfig –list|grep tomcatservice vsftpd statusvi /etc/vsftpd/vsftpd.confadduser -d / -g ftp -s /sbin/nologin sqsgalaxysadduser -d /tmp -g ftp -s /sbin/nologin sqsgalaxyspasswd sqsgalaxyschown -R sqsgalaxys:ftp/chown -R sqsgalaxys:ftp/tmpchown -R sqsgalaxys:ftp/tmp/sqsgalaxysservice vsftpd restartvi /etc/vsftpd/vsftpd.confservice vsftpd restart Note:chroot:限制所列的ftp用户只能访问其被指定的Home目录参考: （一）Linux环境部署(Centos+Nginx+Tomcat+Mysql)-FTP安装_Linux教程 | 帮客之家 vsftpd - Secure, fast FTP server for UNIX-like systems","categories":[],"tags":[{"name":"Use","slug":"Use","permalink":"http://yoursite.com/tags/Use/"},{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/tags/Linux/"}]},{"title":"Use Java","slug":"Use-Java","date":"2016-08-07T08:03:27.000Z","updated":"2016-08-15T01:54:17.463Z","comments":true,"path":"2016/08/07/Use-Java/","link":"","permalink":"http://yoursite.com/2016/08/07/Use-Java/","excerpt":"‘javac’ 不是内部或外部命令，也不是可运行的程序或批处理文件。","text":"‘javac’ 不是内部或外部命令，也不是可运行的程序或批处理文件。 Java 获得内存信息或操作内存的接口// 虚拟机内存系统接口MemoryMXBean // 虚拟机内存管理器接口MemoryManagerMXBean // 虚拟机中的内存池接口MemoryPoolMXBean // 操作系统信息接口OperatingSystemMXBean java 数据库相关的一些类1234DbProc dbobj = new DbProc();Connection conn = dbobj.connect();Statement stm = conn.createStatement();ResultSet rst = stm.executeQuery(strSQL); java 文件位置的输入12File f=new File(\"d:\\\\txdjava\\\\java12.txt\");File f=new File(\"d:/txdjava/java12.txt\"); 参考:- java 中文件路径的表示 - ohuan的日志 - 网易博客 java 与 xml 文件 java 官方文档 The Java™ Tutorials The Java® Language Specification Overview (Java Platform SE 8 )参考:技术的正宗与野路子 - 张铁蕾 - 掘金专栏","categories":[],"tags":[{"name":"Java","slug":"Java","permalink":"http://yoursite.com/tags/Java/"},{"name":"Use","slug":"Use","permalink":"http://yoursite.com/tags/Use/"}]},{"title":"Use-Vim","slug":"Use-Vim","date":"2016-08-06T11:59:45.000Z","updated":"2016-08-12T14:15:34.919Z","comments":true,"path":"2016/08/06/Use-Vim/","link":"","permalink":"http://yoursite.com/2016/08/06/Use-Vim/","excerpt":"vim 使用 1. 删除文件中所有的空行 ::g/^$/d","text":"vim 使用 1. 删除文件中所有的空行 ::g/^$/d 参考: 如何在vim中删除空行-Shell-ChinaUnix.net 2. 整行移动 : 移动到下一行开头+ 移动到上一行开头- 移动到行首0 移动到行尾$ 3. 符号 . : 重复命令 当前行 .-1 代表当前行的上一行 4. MiniBufExplorerMiniBufExplorer 是什麽？MiniBufExplorer 安装MiniBufExplorer 使用参考： fholgado/minibufexpl.vim: Elegant buffer explorer - takes very little screen space 快速浏览和操作Buffer – 插件: MiniBufExplorer buffer 的使用: 下一个 buffer:bn 上一个 buffer:bp 打开名称为 filename 的文件:e&lt;filename&gt; 显示当前打开的 buffer:ls n 为数字，打开第 n 个buffer:b&lt;n&gt; 自动补全:b&lt;tab&gt; 删除 buffer:bd 进制操作: 正常打开文件，默认添加一个换行行vim filename 以二进制打开文件vim -b filename 进入 16 进制查看编辑模式,如果在这个模式下执行 :wq 命令会把文件直接保存成这个界面(会把当前界面都保存成字符):%xxd 修改 16 进制内容后 回到普通模式，可以看到修改产生的变化，这时执行 :wq 不会保存到 16 进制的模式:%xxd -r 12345678910111213eg:(Linux 下操作)echo -n \"test\" &gt; test.bincat test.binvim -b test.bin:%!xxdvim test.bin:%!xxd0x0avim -b test.bin:%!xxd// 修改 :%!xxd -r:wq 参考:在Linux下使用vim配合xxd查看并编辑二进制文件 - killkill - 博客园linux下用vim实现ultraEdit的功能 - Jason Damon - 博客园 :q1 = :q! Vim 帮助文件的跳转 Jump to a subject:Position the cursor on a tag (e.g. |bars|) and hit CTRL-]. With the mouse:“:set mouse=a” to enable the mouse (in xterm or GUI). Double-click the left mouse button on a tag, e.g. |bars|. Jump back:Type CTRL-T or CTRL-O (repeat to go further back). Vim 使用:find命令打开文件使用：搜索打开文件 filename：1:find filename 提示：使用前需要配置path变量,添加以下语句到 .vimrc文件以可以搜索打开以下文件夹中的文件:D:\\OneDrive\\VIMD:\\Proram Files (x86)\\hexo\\source\\_posts123:set path+=.,D:\\OneDrive\\VIM/*# 对包含空格文件夹的特殊处理：:set path+=.,D:\\Proram\\\\\\ Files\\\\\\ (x86)\\hexo\\source\\_posts 参考: 《Vim 实用技巧》技巧42 使用:find命令打开文件 使用vim的find命令快速打开文件 - 王鸿飞的专栏 - 博客频道 - CSDN.NET 官方文档 :help path Vim 重复上一个Ex命令：@： 参考： 《Vim 实用技巧》技巧31 重复上次的 Ex 命令 宏// Vim 重复上一个宏命令：@@// 开始录制宏q{register}// 停止录制宏q// 查看寄存器中的宏:reg a 参考： 《Vim 实用技巧》技巧64 宏的读取与执行 vim 列模式&lt;C-V&gt; 1. vim 水平滚动// 设置换行set wrap// 设置不换行set nowrap 在不换行的设置下,普通模式有如下命令:// 视图向右移动 count 个字符[count]zl// 视图向左移动 count 个字符[count]zh// 视图向右滚动半个屏幕zL// 视图向右滚动半个屏幕zH// 视图滚动到最右侧zs// 视图滚动到最右侧ze 参考:- vim 水平滚动 - lonewolf的个人空间 - 开源中国社区模式:次级主题名称 vim 百分比跳转","categories":[],"tags":[{"name":"Use","slug":"Use","permalink":"http://yoursite.com/tags/Use/"},{"name":"Vim","slug":"Vim","permalink":"http://yoursite.com/tags/Vim/"}]},{"title":"Use Hexo","slug":"Use-Hexo","date":"2016-08-05T10:12:39.000Z","updated":"2016-08-15T12:06:10.319Z","comments":true,"path":"2016/08/05/Use-Hexo/","link":"","permalink":"http://yoursite.com/2016/08/05/Use-Hexo/","excerpt":"Use Hexo1. hexo 命令常用命令 hexo d hexo g hexo clean hexo n “tit le” hexo s","text":"Use Hexo1. hexo 命令常用命令 hexo d hexo g hexo clean hexo n “tit le” hexo s 预览地址 hexo v12345678910111213版本信息: hexo: 3.2.2 hexo-cli: 1.0.2 os: Windows_NT 10.0.14393 win32 x64 http_parser: 2.6.0 node: 5.1.0 v8: 4.6.85.31 uv: 1.7.5 zlib: 1.2.8 ares: 1.10.1-DEV icu: 56.1 modules: 47 openssl: 1.0.2d 组合命令: hexo clean &amp;&amp; hexo s hexo clean &amp;&amp; hexo d2. markdown 常用语法代码块1这里是代码块 图片显示123![“图片描述”（可以不写）](“图片地址”)![0808](http://obkpw0khh.bkt.clouddn.com/2016-08-08.png) 3. Hexo 中 tag，categories 的使用hexo 对一篇文章添加多个标签tags: [aaa, bbb] 123tags:- foo- bar 4. 使用主题 hexo-theme-icarus// 安装主题git clone https://github.com/ppoffice/hexo-theme-icarus.git themes/icarus// _config.ymltheme: icarus// 更新主题 12$ cd themes/icarus$ git pull // 安装搜索插件$ npm install -S hexo-generator-json-content// 启用搜索insight: true 5. 使用文章摘要&lt;!-- more --&gt; 参考 不知道怎么回事，进入主页文章列表显示全部，而不是显示一部分摘要和more · Issue #44 · litten/hexo-theme-yilia Markdown代码块中的Markdown语法 · Issue #587 · hexojs/hexo 请问如何对一篇文章增加多个标签，应该使用什么分隔符？ · Issue #351 · hexojs/hexo Hexo使用攻略：（四）Hexo的分类和标签设置 | { GoonX } 指令 | Hexo Hexo 最常用的几个命令 | MOxFIVE’s Blog Installation · ppoffice/hexo-theme-icarus Wiki ppoffice/hexo-theme-icarus: The blog theme you may fall in love with, coming to Hexo. Icarus Icarus - Wikipedia, the free encyclopedia 伊卡洛斯 - 维基百科，自由的百科全书 Icarus - Google Search","categories":[],"tags":[{"name":"Use","slug":"Use","permalink":"http://yoursite.com/tags/Use/"},{"name":"Hexo","slug":"Hexo","permalink":"http://yoursite.com/tags/Hexo/"}]},{"title":"Use WireShark","slug":"Use-WireShark","date":"2016-08-05T10:02:21.000Z","updated":"2016-08-14T08:41:23.222Z","comments":true,"path":"2016/08/05/Use-WireShark/","link":"","permalink":"http://yoursite.com/2016/08/05/Use-WireShark/","excerpt":"Wireshark 过滤规则显示http状态码为200的数据包 http.response.code==200","text":"Wireshark 过滤规则显示http状态码为200的数据包 http.response.code==200 参考: Wireshark · Go Deep.","categories":[],"tags":[{"name":"Use","slug":"Use","permalink":"http://yoursite.com/tags/Use/"},{"name":"Wireshark","slug":"Wireshark","permalink":"http://yoursite.com/tags/Wireshark/"}]}]}